// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String?
  provider     String?
  providerId   String?
  name         String?
  avatar       String?
  role         String    @default("user") // "user" or "admin"
  status       String    @default("active") // "active", "inactive", etc.
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  accounts     Account[] // Relations to accounts (OAuth)
  sessions     Session[] // Relations to sessions (NextAuth)
}

model Account {
  id                 Int      @id @default(autoincrement())
  userId             Int
  provider           String
  providerAccountId  String
  refresh_token      String? // Optional, depending on the OAuth provider
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user               User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
